name: Python CI Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      bot: ${{ steps.filter.outputs.bot }}
      transcriber: ${{ steps.filter.outputs.transcription }}
      python_workflow: ${{ steps.filter.outputs.python_workflow }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed Python service files
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            bot:
              - 'bot/**'

            transcriber:
              - 'transcription/**'

            python_workflow:
              - '.github/workflows/py-test.yml'


  test-bot:
    needs: changes
    if: needs.changes.outputs.bot == 'true' || needs.changes.outputs.python_workflow == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install uv and cache dependencies
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install dependencies (bot)
        run: uv sync
        working-directory: ./bot
      - name: Run bot tests
        run: uv run pytest -v -s tests
        working-directory: ./bot

  test-transcriber:
    needs: changes
    if: needs.changes.outputs.transcriber == 'true' || needs.changes.outputs.python_workflow == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install uv and cache dependencies
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install dependencies (transcriber)
        run: uv sync
        working-directory: ./transcription
      - name: Run transcriber tests
        run: uv run pytest -v -s tests
        working-directory: ./transcription
